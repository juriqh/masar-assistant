name: Manual Run

on:
  workflow_dispatch:
    inputs:
      case:
        description: Which task to run?
        type: choice
        options: [morning, preclass]
        default: morning
      dry_run:
        description: DRY_RUN mode (true prints/logs only)
        type: boolean
        default: false
      asof:
        description: Optional "YYYY-MM-DD HH:MM" (Asia/Riyadh) for testing preclass
        type: string
        default: ""

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Export runtime env
        shell: bash
        run: |
          echo "ACTIVE_USER=magical_pomelo_39468" >> $GITHUB_ENV
          echo "TZ_USER=Asia/Riyadh" >> $GITHUB_ENV
          echo "DRY_RUN=${{ inputs.dry_run }}" >> $GITHUB_ENV
          # Supabase
          [ -n "${{ secrets.SUPABASE_URL }}" ] || { echo "Missing SUPABASE_URL"; exit 1; }
          [ -n "${{ secrets.SUPABASE_KEY }}" ] || [ -n "${{ secrets.SUPABASE_ANON_KEY }}" ] || { echo "Missing SUPABASE_KEY or SUPABASE_ANON_KEY"; exit 1; }
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY || secrets.SUPABASE_ANON_KEY }}" >> $GITHUB_ENV
          # Discord (optional)
          [ -z "${{ secrets.DISCORD_WEBHOOK_URL }}" ] || echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> $GITHUB_ENV
          [ -z "${{ secrets.DISCORD_WEBHOOK_LOG_URL }}" ] || echo "DISCORD_WEBHOOK_LOG_URL=${{ secrets.DISCORD_WEBHOOK_LOG_URL }}" >> $GITHUB_ENV

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -U supabase requests google-genai

      - name: Run case
        env:
          CASE: ${{ inputs.case }}
          ASOF: ${{ inputs.asof }}
        run: |
          echo "Run case \"$CASE\" in"
          if [ "$CASE" = "preclass" ]; then
            if [ -n "$ASOF" ]; then
              python -m tasks.pre_class_reminder --asof "$ASOF"
            else
              python -m tasks.pre_class_reminder
            fi
          else
            python -m tasks.morning_digest
          fi
